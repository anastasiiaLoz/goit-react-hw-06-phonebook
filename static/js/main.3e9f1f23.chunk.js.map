{"version":3,"sources":["Components/contactsForm/StyledContactsForm.js","Components/contactsForm/ContactsForm.js","Components/contactsList/StyledContactsList.js","Components/contactsList/ContactsList.js","Components/contactsSection/ContactsSection.js","Components/contactsFilter/StyledContactsFilter.js","Components/contactsFilter/ContactsFilter.js","redux/actions/actions.js","Phonebook.js","App.js","redux/reducers/reducers.js","redux/store.js","index.js"],"names":["StyledContactsForm","styled","form","ContactsForm","state","contacts","filter","name","number","onHandleSubmit","e","preventDefault","props","onCheckDuplicateName","alert","addContact","setState","onHandleChange","target","value","onSubmit","this","placeholder","type","pattern","title","required","onChange","Component","StyledContactsList","div","ContactsList","deleteContact","map","contact","className","onClick","id","ContactsSection","children","styles","StyledFilterContainer","ContactsFilter","setFilter","createAction","getAllContacts","Contacts","a","axios","post","data","delete","some","getFilteredContacts","toLowerCase","includes","get","Object","keys","key","connect","dispatch","App","Phonebook","allReducers","createReducer","payload","_","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e9f1f23.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const StyledContactsForm = styled.form`\n    width:400px;\n    height: 250px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: flex-start;\n    border-color: black;\n    padding: 15px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 2px 1px -1px rgb(0 0 0 / 12%);\n    margin-bottom: 50px;\n    \ninput {\n    width: 100%;\n  padding: 12px 10px;\n  margin: 8px 0;\n  display: inline-block;\n  border-radius: 4px;\n  box-sizing: border-box;\n  border: 1px solid #ccc8c8;\n  transition: .3s border-color;\n    &:hover {\n  border: 1px solid #0f55eb;\n}\n}\ninput::placeholder {\n  color: rgba(0, 26, 255, 0.336);\n  font-size: 1em;\n  font-style: italic;\n}\n`","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyledContactsForm } from './StyledContactsForm.js'\n\n\nclass ContactsForm extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n        name: '',\n        number: ''\n    }\n\n    onHandleSubmit = e => {\n        e.preventDefault();\n        if (this.props.onCheckDuplicateName(this.state.name)) {\n            alert(`${this.state.name} is already in contacts.`);\n            return\n        };\n        this.props.addContact(this.state);\n\n        this.setState({\n            contacts: [],\n            name: \"\",\n            filter: '',\n            number: \"\"\n        });\n    };\n\n\n    onHandleChange = e => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n\n    };\n\n    render() {\n        return (\n            <StyledContactsForm onSubmit={this.onHandleSubmit}>\n                <label>\n                    Name\n          <input\n                        placeholder=\"what's his/her name?\"\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        onChange={this.onHandleChange}\n                        value={this.state.name}\n                    />\n                </label>\n                <label>\n                    Number\n          <input\n                        placeholder=\"gimme their number, hun;)\"\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        onChange={this.onHandleChange}\n                        value={this.state.number}\n                    />\n                </label>\n                <button type=\"submit\">Add Contact</button>\n            </StyledContactsForm>\n        );\n    }\n}\n\nContactsForm.propTypes = {\n    onHandleSubmit: PropTypes.func,\n    name: PropTypes.string,\n    number: PropTypes.string,\n}.isRequired;\n\nexport default ContactsForm;\n","import styled from \"styled-components\"\n\nexport const StyledContactsList = styled.div`\n    width:400px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: flex-start;\n    border-color: black;\n    padding: 15px;\n    border-radius: 2px;\n    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 2px 1px -1px rgb(0 0 0 / 12%);\n    margin-top: 50px;\n\n.styled-contact-li{\n    display:flex;\n    align-items: center;\n    justify-content: space-between;\n}\n`","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyledContactsList } from \"./StyledContactsList\";\n\nconst ContactsList = ({ contacts, deleteContact }) => {\n    return (\n        <StyledContactsList>\n            <ul>\n                {contacts.map(contact => (\n                    <li className=\"styled-contact-li\"\n                        key={contact.id}>\n                        <p>{contact.name}:</p>\n                        <p>{contact.number}</p>\n                        <button type=\"button\" onClick={deleteContact} id={contact.id}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </StyledContactsList>\n    );\n};\n\nContactsList.propTypes = {\n    deleteContact: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        number: PropTypes.string,\n    }).isRequired),\n}\n\n\nexport default ContactsList;\n","import React from 'react';\n\nconst ContactsSection = ({ title, children, styles }) => {\n    return (\n        <div className={styles}>\n            <h2>{title}</h2>\n            {children}\n        </div>\n    )\n}\n\nexport default ContactsSection;","import styled from 'styled-components'\n\nexport const StyledFilterContainer = styled.div`\n    width:400px;\n    height: 150px;\n    padding: 15px;\n    border-radius: 2px;\n    &:hover{\n        border: 1px solid #0f55eb;\n    box-shadow: 0 1px 3px 0 rgb(0 0 0 / 20%), 0 1px 1px 0 rgb(0 0 0 / 14%), 0 2px 1px -1px rgb(0 0 0 / 12%);\n    background-color: rgba(0, 26, 255, 0.336);\n    }\n\ninput {\n    width: 100%;\n  padding: 12px 10px;\n  margin: 8px 0;\n  display: inline-block;\n  border-radius: 4px;\n  box-sizing: border-box;\n  border: 1px solid #ccc8c8;\n  transition: .3s border-color;\n  \n   \n}\ninput::placeholder {\n  color: rgba(0, 26, 255, 0.336);\n  font-size: 1em;\n  font-style: italic;\n}\n`","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { StyledFilterContainer } from './StyledContactsFilter';\n\nconst ContactsFilter = ({ filter, setFilter }) => {\n    return (\n        <StyledFilterContainer>\n            <label>\n                <h3>Find contacts by name</h3>\n                <input className=\"filterInput\"\n                    type=\"text\"\n                    value={filter}\n                    onChange={setFilter}\n                    placeholder=\"who is your booty call for tonight? \"\n                />\n            </label>\n        </StyledFilterContainer>\n\n    );\n}\n\nContactsFilter.propTypes = {\n    filter: PropTypes.string,\n    setFilter: PropTypes.func,\n}.isRequired;\n\n\nexport default ContactsFilter;","// Formatted with Redux\n//-------------------------------------------------------\n// export const addContact = (contact) => {\n//     return {\n//         type: 'ADD_CONTACT',\n//         payload: contact\n//     }\n// }\n\n// export const deleteContact = (id) => {\n//     return {\n//         type: 'DELETE_CONTACT',\n//         payload: id,\n//     }\n// }\n\n// export const getAllContacts = (contacts) => {\n//     return {\n//         type: 'GET_ALL_CONTACTS',\n//         payload: contacts,\n//     }\n// }\n\n\n// Formatted with Redux Toolkit\n//----------------------------------------------------------\nimport { createAction } from '@reduxjs/toolkit'\n\nexport const addContact = createAction('contacts/addContact')\nexport const deleteContact = createAction('contacts/deleteContact')\nexport const getAllContacts = createAction('contacts/getAllContacts')","import React, { Component } from \"react\";\nimport ContactsForm from \"./Components/contactsForm/ContactsForm\";\nimport ContactsList from \"./Components/contactsList/ContactsList\";\nimport ContactsSection from \"./Components/contactsSection/ContactsSection\";\nimport ContactsFilter from \"./Components/contactsFilter/ContactsFilter\";\nimport axios from \"axios\"\nimport { connect } from 'react-redux'\nimport { addContact, deleteContact, getAllContacts } from './redux/actions/actions'\n\n\nclass Contacts extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n    }\n\n\n    async componentDidMount() {\n        try {\n            const { data } = await axios.get(\n                `https://bootycall-phonebook-default-rtdb.firebaseio.com/contacts.json`\n            )\n            if (data) {\n                const contacts = Object.keys(data).map(key => ({ id: key, ...data[key] }))\n                this.props.getAllContacts(contacts)\n            }\n        } catch (error) {\n\n        }\n    }\n\n    addContact = async (contact) => {\n        try {\n            const { data } = await axios.post(\n                `https://bootycall-phonebook-default-rtdb.firebaseio.com/contacts.json`,\n                contact)\n            this.props.addContact({...contact, id: data.name})\n        } catch (error) {\n\n        }\n    };\n\n    deleteContact = async (e) => {\n        try {\n            const { id } = e.target\n            await axios.delete(\n                `https://bootycall-phonebook-default-rtdb.firebaseio.com/contacts/${id}.json`\n            );\n            this.props.deleteContact(id);\n        } catch (error) {\n        }\n    }\n\n    onCheckDuplicateName = (name) => {\n        return this.state.contacts.some((contact) => contact.name === name)\n    }\n\n    setFilter = (e) => {\n        const { value } = e.target;\n        this.setState({\n            filter: value\n        })\n    }\n\n    getFilteredContacts = () => {\n        return this.props.contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter.toLowerCase()))\n    };\n\n\n    render() {\n        return (\n            <>\n                <ContactsSection title=\"Phonebook\">\n                    <ContactsForm addContact={this.addContact} onCheckDuplicateName={this.onCheckDuplicateName} />\n                </ContactsSection>\n\n                <ContactsSection title=\"Contacts\" styles=\"filterContainerStyle\">\n                    <ContactsFilter filter={this.state.filter} setFilter={this.setFilter} />\n                </ContactsSection>\n\n                <ContactsSection>\n                    <ContactsList contacts={this.getFilteredContacts()} deleteContact={this.deleteContact} />\n                </ContactsSection>\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        contacts: state.contacts\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addContact: (contacts) => {\n            dispatch(addContact(contacts))\n        },\n        deleteContact: (contacts) => {\n            dispatch(deleteContact(contacts))\n        },\n        getAllContacts: (contacts) => {\n            dispatch(getAllContacts(contacts))\n        }\n    }\n}\n\nexport default connect (mapStateToProps, mapDispatchToProps)(Contacts);\n","import React from 'react';\nimport Phonebook from './Phonebook'\n\nconst App = () => {\n    return (\n        <>\n            <Phonebook />\n        </>\n    );\n};\n\nexport default App;\n","// import { ADD_CONTACT, DELETE_CONTACT, GET_ALL_CONTACTS } from '../actions/actions'\n\nimport { addContact, deleteContact, getAllContacts} from '../actions/actions'\n\n// Formatted with Redux\n//------------------------------------------------------------\n// const allReducers = (state = [], action) => {\n//     switch (action.type) {\n//         case 'ADD_CONTACT':\n//             return [...state, action.payload];\n        \n//         case 'DELETE_CONTACT':\n//             return [...state.filter(contact => contact.id !== action.payload)];\n        \n//         case 'GET_ALL_CONTACTS':\n//             return action.payload\n//         default:\n//             return state;\n//     }\n// }\n\n\n// Formatted with Redux Toolkit \n//------------------------------------------------------------\nimport { createReducer } from '@reduxjs/toolkit'\n\nconst allReducers = createReducer([], {\n    [addContact]: (state, { payload }) => [...state, payload],\n    [deleteContact]: (state, { payload }) => [...state.filter(contact => contact.id !== payload)],\n    [getAllContacts]: (_, {payload}) => payload,\n})\n\n\nexport default allReducers;    ","import { configureStore } from '@reduxjs/toolkit';\nimport allReducers from './reducers/reducers'\n\nconst store = configureStore({\n    reducer: {\n        contacts: allReducers,\n    }\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\n\n\nReactDOM.render(                 \n    <Provider store={store}>\n        <App />\n    </Provider>,                   \n    document.getElementById('root')\n)"],"sourceRoot":""}